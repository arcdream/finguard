import { createClient } from '@supabase/supabase-js';
import wixSecretsBackend  from 'wix-secrets-backend';
import StringConstants from 'public/common-strings';
import { createBackendResponse } from 'public/backend-response';

  export async function get_supabase_client() {
    try {
      const apiKey = await wixSecretsBackend.getSecret('supabase_apiKey');
      //console.log("This is apiKey : ", apiKey);
  
      const apiUrl = await wixSecretsBackend.getSecret('supabase_apiUrl');
      //console.log("This is apiUrl : ", apiUrl);
  
      return createClient(apiUrl, apiKey);
    } catch (error) {
      console.error('Error getting Supabase client:', error);
      throw new Error('Failed to create Supabase client');
    }
  }

  export async function getSupabaseApiKeyAndUrl() {
    try {
      const apiKey = await wixSecretsBackend.getSecret('supabase_apiKey');
      const apiUrl = await wixSecretsBackend.getSecret('supabase_apiUrl');
      return [apiKey, apiUrl];
    } catch (error) {
      console.error('Error getting Supabase client:', error);
      throw new Error('Failed to create Supabase client');
    }
  }

  export async function executeSupabasePatchRequest(urlEndPoint, httpPostBody, accessJWTToken) {
    return executeSupabasePostRequestWithUpdateMode(urlEndPoint, httpPostBody, accessJWTToken, 'return=representation', 'PATCH' );
  }

  export async function executeSupabasePostRequest(urlEndPoint, httpPostBody, accessJWTToken) {
    return executeSupabasePostRequestWithUpdateMode(urlEndPoint, httpPostBody, accessJWTToken, 'return=representation', 'POST' );
  }

  export async function executeSupabaseUpsertRequest(urlEndPoint, httpPostBody, accessJWTToken) {
    executeSupabasePostRequestWithUpdateMode(urlEndPoint, httpPostBody, accessJWTToken, 'resolution=merge-duplicates', 'POST' );
  }

  

  export async function executeSupabasePostRequestWithUpdateMode(urlEndPoint, httpPostBody, accessJWTToken, updateMode, restMethod) {

    try {
      const apiKey = await wixSecretsBackend.getSecret('supabase_apiKey');
      const apiUrl = await wixSecretsBackend.getSecret('supabase_apiUrl');
      const supabasePostUrl = apiUrl + urlEndPoint;
      
      console.log("[ subpbase-utils ] - httpPostBody : ", httpPostBody);
      console.log("[ subpbase-utils ] - accessJWTToken : ", accessJWTToken);
  
      const postOptions = {
        method: restMethod,
        headers: {
          'Authorization': `Bearer ${accessJWTToken}`, 
          'Content-Type': 'application/json',
          'apiKey': apiKey,
          'Prefer': updateMode   
        },
        body: JSON.stringify(httpPostBody)
      };

      const response = await fetch(supabasePostUrl, postOptions);

      console.log("[ supabase-utils ] - Http Post Response : ", response);
  
      if (response.status === 401) {
        const errorData = await response.json(); 
        console.log("[ supabase-utils ] - error in post request  :", errorData);
        return createBackendResponse(StringConstants.JWT_EXPIRED, StringConstants.FAIL);
      }

      console.log("-------------- Amit ------> 0 : ", response);
      console.log("-------------- Amit ------> 1 : ", response.status);
  
      if (!response.ok) {
        console.log("-------------- Amit ------> 1.1 : ", response.status);
        return createBackendResponse(response.status, StringConstants.FAIL);
      }


      console.log("-------------- Amit ------> 2 : ", response.status);
  
      const data = await response.json();
      console.log("-------------- Amit ------> 3 : ", data);
      console.log("[ supabase-utils ] - Post json response : ", data);
      return createBackendResponse(data, StringConstants.SUCCESS);
  
    } catch (error) {
      console.log('[ supabase-utils ] - Error Executing supabase post request:', error);
      throw new Error('Failed to execute supabase post requestt');
    }
  }



  export async function executeSupabaseGetRequest(urlEndPoint, accessJWTToken) {

    try {
      const apiKey = await wixSecretsBackend.getSecret('supabase_apiKey');
      const apiUrl = await wixSecretsBackend.getSecret('supabase_apiUrl');
      const supabaseGetUrl = apiUrl + urlEndPoint;

      //const supabaseGetUrl = 'https://nkfrnetfnvbmrogdskyd.supabase.co/rest/v1/agents?supa_user_id=eq.aa55f3b6-3e75-478c-a3c3-3160d740fc4f';

      console.log("Amit final URL to HTTP GET : ", supabaseGetUrl );
  
      const getOptions = {
        method: 'GET',
        headers: {
          'Authorization': `Bearer ${accessJWTToken}`, 
          'Content-Type': 'application/json',
          'apiKey': apiKey,
          'Prefer': 'return=representation'    
        }
      };
  
      const response = await fetch(supabaseGetUrl, getOptions);

      if (response.status === 401) {
        const errorData = await response.json(); 
        console.log("Amit error data in supabase-utils :", errorData);

        return createBackendResponse(StringConstants.JWT_EXPIRED, StringConstants.FAIL);
      }

      if (!response.ok) {
        return createBackendResponse(response, StringConstants.FAIL);
      }
      
      const data = await response.json();
      return createBackendResponse(data, StringConstants.SUCCESS);
  
    } catch (error) {
      console.error('Error Executing supabase get request:', error);
      throw new Error('Failed to execute supabase get requestt');
    }
  }
  
  